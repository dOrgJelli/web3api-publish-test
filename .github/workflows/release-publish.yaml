name: Release-Publish
on:
  # When Pull Request is merged
  pull_request:
    types: [closed]

jobs:
  Release-Publish:
    name: Publish
    if: |
      github.event.pull_request.user.login == 'web3-api-build-bot' &&
      github.event.pull_request.merged == true
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.base.ref }}

      - name: Read VERSION into env.RELEASE_VERSION
        run: echo RELEASE_VERSION=$(cat VERSION) >> $GITHUB_ENV

      - name: Read .nvmrc into env.NVMRC
        run: echo NVMRC=$(cat .nvmrc) >> $GITHUB_ENV

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '${{env.NVMRC}}'

      - name: Set Git Identity
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{github.repository}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check If Tag Exists
        id: tag_check
        shell: bash -ex {0}
        run: |
          GET_API_URL="https://api.github.com/repos/${{github.repository}}/git/ref/tags/${{env.RELEASE_VERSION}}"
          http_status_code=$(curl -LI $GET_API_URL -o /dev/null -w '%{http_code}\n' -s \
            -H "Authorization: token ${GITHUB_TOKEN}")
          if [ "$http_status_code" -ne "404" ] ; then
            echo TAG_EXISTS=true >> $GITHUB_ENV
          else
            echo TAG_EXISTS=false >> $GITHUB_ENV
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Git Tag
        uses: pkgdeps/git-tag-action@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_repo: ${{github.repository}}
          git_commit_sha: ${{github.event.pull_request.merge_commit_sha}}
          version: "${{env.RELEASE_VERSION}}"

      - uses: actions/github-script@0.8.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '**[Release Published](https://github.com/${{ github.repository }}/releases/tag/${{ env.RELEASE_VERSION }}) `${{env.RELEASE_VERSION}}`** ðŸŽ‰'
            })
