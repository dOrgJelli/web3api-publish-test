name: Release-PR
on:
  issue_comment:
    types: [created]

jobs:
  Release-PR:
    if: |
      github.event.issue.pull_request &&
      $(grep -Fx ${{github.event.comment.user.login}} .github/PUBLISHERS) == ${{github.event.comment.user.login}} &&
      startsWith(github.event.comment.body, '/workflows/release-pr')
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.base.ref }}

      - name: Read VERSION into env.RELEASE_VERSION
        run: echo RELEASE_VERSION=$(cat VERSION) >> $GITHUB_ENV

      - name: Make sure it's the publisher
        run: |
          if [grep -Fxq ${{github.event.comment.user.login}} .github/PUBLISHERS]; then
            echo IS_PUBLISHER=true >> $GITHUB_ENV
          else
            echo IS_PUBLISHER=false >> $GITHUB_ENV
          fi

      - name: Check If Tag Exists
        id: tag_check
        shell: bash -ex {0}
        run: |
          GET_API_URL="https://api.github.com/repos/${{github.repository}}/git/ref/tags/${{env.RELEASE_VERSION}}"
          http_status_code=$(curl -LI $GET_API_URL -o /dev/null -w '%{http_code}\n' -s \
            -H "Authorization: token ${GITHUB_TOKEN}")
          if [ "$http_status_code" -ne "404" ] ; then
            echo TAG_EXISTS=true >> $GITHUB_ENV
          else
            echo TAG_EXISTS=false >> $GITHUB_ENV
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}



      - name: Read .nvmrc into env.NVMRC
        run: echo NVMRC=$(cat .nvmrc) >> $GITHUB_ENV

      - name: Set env.USER to User
        run: echo USER=web3-api-build-bot >> $GITHUB_ENV

      - name: Setup Node.js
        if: ${{env.TAG_EXISTS}} == false
        uses: actions/setup-node@v1
        with:
          node-version: '${{env.NVMRC}}'

      - name: Set Git Identity
        if: ${{env.TAG_EXISTS}} == false
        run: |
          git config --global user.name '${{env.USER}}'
          git config --global user.email '${{env.USER}}@users.noreply.github.com'
        env:
          GITHUB_TOKEN: ${{ secrets.WEB3_API_BUILD_BOT_PAT }}

      - name: Apply Version & Commit
        if: ${{env.TAG_EXISTS}} == false
        run: yarn run version:apply --yes

      - name: Create Pull Request
        if: ${{env.TAG_EXISTS}} == false
        id: cpr
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.WEB3_API_BUILD_BOT_PAT }}
          push-to-fork: ${{env.USER}}/${{github.event.repository.name}}
          branch: release/${{env.RELEASE_VERSION}}
          base: ${{ github.event.pull_request.base.ref }}
          committer: GitHub <noreply@github.com>
          author: ${{env.USER}} <${{env.USER}}@users.noreply.github.com>
          commit-message: "${{env.RELEASE_VERSION}}"
          title: 'Web3API ${{env.RELEASE_VERSION}}'
          body: |
            ## Web3API ${{env.RELEASE_VERSION}}

            TODO: Add "Web3API-Release" Label

            ### Breaking Changes

            - [ ] TODO

            ### Features

            - [ ] TODO

            ### Bug Fixes

            - [ ] TODO

      
